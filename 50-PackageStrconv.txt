/*
strconv = String Conversion

https:/golang.org/pkg/strconv

string ke tipelain == strconv.Parse<Tipe Data>(string) // Konversi ini...
...selalu disertai kemungkinaan eror, CEK KODE DIBAWAH

tipeLain ke string == strconv.FormatBool(bool)
				   == strconv.FormatInt(int, ...)
				   == strconv.FormatFloat(float, ...)
*/

package main

import (
	"fmt"
	"strconv"
)

func main() {
	// string >> bool
	sBool, err := strconv.ParseBool("true")
	if err == nil {
		fmt.Println(sBool)
	} else {
		fmt.Println(err.Error())
	}

	// string >> int
	sInt, err := strconv.ParseInt("100", 10, 32)
	// .ParseInt("Nilainya", bin-des-oct-hex, bitnya)
	if err == nil {
		fmt.Println(sInt)
	} else {
		fmt.Println(err.Error())
	}

	// string >> bool
	sFloat, err := strconv.ParseFloat("3.14", 32)
	// .ParseFloat("Nilainya", bitnya)
	if err == nil {
		fmt.Println(sFloat)
	} else {
		fmt.Println(err.Error())
	}

	// bool >> string
	bString := strconv.FormatBool(true)
	fmt.Println(bString)

	// int >> string
	iString := strconv.FormatInt(1000, 10)
	fmt.Println(iString)

	// float >> string
	fString := strconv.FormatFloat(12.112, 'f', 2, 64)
	// .FormatFloat(12.112, 'f', 2, 64)
	/*
		12.112 --> Nilai Float
		'f"	   --> Menandakan angka base Decimal, ...
					'x' hexadesimal
					'o' oktal
					'b' biner
		2	   --> Nilai dibelakang koma yang dicetak string, ...
					-1 untuk nilai yang tak pasti(pada x-o-b)
		64	   --> bit float
	*/
	fmt.Println(fString)

	// Cara lain seperti di bahasa C
	stringAngka := "12332"
	nilai, err := strconv.Atoi(stringAngka) // Atoi = A to i = a element to int
	if err == nil {
		fmt.Println("Int =", nilai)
	} else {
		fmt.Println(err.Error())
	}

	number := 12332
	value := strconv.Itoa(number) // Itoa = I to a = Int to a element
	fmt.Println("String =", value)
}
